package com.crm.mapper;

import com.crm.entity.Customer;
import com.crm.entity.Region;
import com.crm.entity.ShowList;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Component;

import java.util.List;

@Mapper
@Component(value = "customerMapper")
public interface CustomerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbggenerated
     */
    int insert(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbggenerated
     */
    int insertSelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbggenerated
     */
    Customer selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Customer record);

    /**
     * Method is used to find customer who has no customer service staff
     * @return List<Customer>
     */
    List<Customer> selectAllUnassignedCustomer();

    /**
     * Method is used to find all possible region in the customer list
     * @return List<Region>
     */
    List<Region> selectAllCustomerRegion();
    /**
     * Method is used to find all Customer in the same region
     * @param region
     * @return List<Customer>
     */
    List<Customer> selectAllCustomerByRegion(Region region);

    List<String> selectAllPossibleValue(@Param("name")String name);

    List<Customer> selectAllCustomerByValue(@Param("name")String name, @Param("value")String value);
}